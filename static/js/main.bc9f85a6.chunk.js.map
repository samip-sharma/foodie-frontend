{"version":3,"sources":["image/Foodie-logo.png","image/foodie-profile-pic.jpg","components/Login.js","components/ResturantInHome.js","components/FoodieNavbar.js","components/FoodieSidebar.js","components/HomeMap.js","components/Home.js","components/RestaurantComments.js","components/Map.js","components/UsersThatLikedRestaurant.js","components/RestaurantDetail.js","components/Friendlist.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","user_name","password","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","errors","localStorage","user_id","clickedUser","token","props","history","push","handleRegisterClick","this","className","src","require","alt","style","color","onSubmit","onChange","type","placeholder","Button","variant","onClick","React","Component","RestaurantInHome","handleClick","id","restaurant_id","restaurant","image_url","slice","FoodieNavbar","searchTerm","handleSearchInput","handleSearchSubmit","handleSearchRestaurant","handleLogout","clear","handleHomePageClick","handleProfileClick","Navbar","bg","expand","Nav","Link","Toggle","aria-controls","Collapse","href","Form","inline","FormControl","FoodieSidebar","likedRestaurants","resp","allLikedRestaurants","length","map","real_id","Marker","text","HomeMap","coo","AllRestaurant","coordinates","lat","lng","allCoordinates","latitude","longitude","height","width","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","Home","restaurants","Fragment","RestaurantComments","handleDeleteButton","comment","handleDeleteComment","allComments","comments","user","context","parseInt","textDecoration","AnyReactComponent","SimpleMap","zoom","defaultProps","center","UsersThatLikedRestaurant","arr","display","usersLiked","RestaurantDetail","liked","commentText","fetchCommentFromBackend","error","catch","console","log","handleUsersLikeList","handleLike","restaurant_name","handleCommentSubmit","handleCommentTypeChange","displayCategories","displayAddress","categories","rating","price","location","display_phone","category","title","display_address","join","class","aria-hidden","Map","Friendlist","friendList","userSearchTerm","allUsers","myFriends","friend","userJsx","filter","toLowerCase","includes","Register","setItem","handleLoginClick","Profile","friends","current_id","fetchUserFromBackend","handleAddFriend","handleDeleteFriend","fetchingFriendsList","componentDidMount","userRestaurants","boolean","addOrRemoveBoolean","border","background","App","detailRestaurant","xcoordinate","ycoordinate","term","getRestaurantFromYelp","getGeoLocation","navigator","geolocation","getCurrentPosition","position","xcoo","coords","ycoo","prevState","businesses","exact","path","render","routerProps","Boolean","window","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc9f85a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Foodie-logo.32f048bd.png\";","module.exports = __webpack_public_path__ + \"static/media/foodie-profile-pic.48860dea.jpg\";","import React from 'react'\nimport { Button} from 'react-bootstrap'\n\nexport default class Login extends React.Component{\n    \n    state = {\n        user_name: '',\n        password: ''\n    }\n\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(`https://flatiron-foodie.herokuapp.com/tokens`,{\n            method:\"POST\",\n            headers:{\n                'Content-Type':\"application/json\",\n                \"Accept\":\"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n        .then(response=>response.json())\n        .then((data) => {\n            if (!data.errors){\n                localStorage.user_id=data.user_id\n                localStorage.clickedUser = data.user_id\n                localStorage.token=data.token\n                this.props.history.push(\"/home\")\n            }\n        })\n    }\n\n    handleRegisterClick = () => {\n        this.props.history.push(\"/register\")\n    }\n\n    render(){\n        if(localStorage.token){\n            this.props.history.push(\"/home\") \n        }\n\n        return(\n            <div className=\"login-page\">\n                <img src={require('../image/Foodie-logo.png')} alt=\"logo\" />\n                <div className=\"wrapper-login\">\n                    <h2 style={{ color:\"yellow\"}}>Welcome Back 🍕</h2>\n                    <form onSubmit={ this.handleSubmit }>\n                    <input className=\"username-input\"  onChange={ this.handleInputChange } value={ this.state.user_name } type=\"text\" placeholder=\"User Name\" name=\"user_name\"/>\n                    <br></br><br></br>\n                    <input className=\"password-input\" onChange={ this.handleInputChange } value={ this.state.password }  type=\"password\" placeholder=\"Password\" name=\"password\"/>\n                    <br></br><br></br>\n                    <Button type=\"submit\" value=\"submit\" variant=\"primary\">Submit</Button>\n                    </form>\n                    <Button variant=\"warning\" onClick={ this.handleRegisterClick }>Register</Button>\n                </div>\n                <br></br>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class RestaurantInHome extends React.Component{\n    \n    handleClick = (id) => {\n        localStorage.restaurant_id = id\n        this.props.history.push(\"/show\")\n    }\n\n    render(){\n        return(\n            <div className=\"home-each-image\">\n                <img alt={ this.props.restaurant.name } onClick={() => this.handleClick(this.props.restaurant.id)} className={\"each-home-image\"} src={this.props.restaurant.image_url} />\n                <div className=\"image-caption\">{this.props.restaurant.name.slice(0,20)}</div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\n\nclass FoodieNavbar extends React.Component {\n\n    state={\n        searchTerm: ''\n    }\n\n    handleSearchInput = (e) => {\n        this.setState({\n            searchTerm:e.target.value\n        })\n    }\n\n    handleSearchSubmit = (e) => {\n        e.preventDefault()\n        this.props.history.push(\"/home\")\n        if (this.state.searchTerm !== \"\") this.props.handleSearchRestaurant(this.state.searchTerm)\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.props.history.push(\"/\")\n    }\n\n    handleHomePageClick=()=>{\n        this.props.handleSearchRestaurant()\n        this.props.history.push(\"/home\")\n    }\n\n    handleProfileClick=()=>{\n        localStorage.clickedUser = localStorage.user_id\n        this.props.history.push(\"/profile\")\n    }\n    \n    render() {\n        return(\n            <div className=\"navbar-container\">\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                    <Nav.Link onClick={this.handleHomePageClick} >Foodie</Nav.Link>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link  onClick={this.handleProfileClick}>My Profile</Nav.Link>\n                            <Nav.Link  href=\"#friendlist\">Followed Users</Nav.Link>\n                            <Button variant=\"danger\" onClick={ this.handleLogout }>Logout</Button>\n                            </Nav>\n                            <Form onSubmit={this.handleSearchSubmit}  inline>\n                            <FormControl type=\"text\" onChange={this.handleSearchInput} value={this.state.searchTerm}  placeholder=\"Search\" className=\"mr-sm-2\" />\n                            <Button  type=\"submit\" value=\"submit\" variant=\"secondary\">Search</Button>\n                            </Form>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default FoodieNavbar","import React from 'react';\n\nclass FoodieSidebar extends React.Component {\n  \n  state = {\n    likedRestaurants: []\n  }\n\n  componentDidMount() {\n      fetch(`https://flatiron-foodie.herokuapp.com/getFavRestaurants/${localStorage.user_id}`)\n      .then(resp => resp.json())\n      .then((data) => {\n              this.setState({\n                  likedRestaurants: data\n              })\n          })\n  }\n\nhandleClick = (id) => {\n  localStorage.restaurant_id = id\n  this.props.history.push(\"/show\")\n}\n\n  render() {\n      let allLikedRestaurants;\n      if(this.state.likedRestaurants.length > 0){\n            allLikedRestaurants = this.state.likedRestaurants.map((restaurant)=>{\n              return <li onClick={ () => this.handleClick(restaurant.real_id) } >{ restaurant.name } </li>\n            })\n      }\n      \n      return(\n          <div className=\"side-bar\">\n            <h4>Your Favorite Restaurants</h4>\n            <br></br>\n            <br></br>\n              { allLikedRestaurants }\n          </div>\n      )\n  }\n\n}\n\nexport default FoodieSidebar","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nconst Marker = ({ text,restaurant_id, history }) => <div className=\"marker-gmap\"  onClick={ (e) => \n    {localStorage.restaurant_id=restaurant_id\n        history.push('/show')\n    }} >{text}</div>;\n\nclass HomeMap extends Component {\n\n  render() {\n      let coo\n      if(this.props.AllRestaurant && this.props.coordinates){\n        coo = {\n            lat:40.700862,\n            lng:-73.987472\n        }\n    }\n    let allCoordinates = this.props.AllRestaurant.map((restaurant) => {\n        return <Marker\n        lat = {restaurant.coordinates.latitude}\n        lng = {restaurant.coordinates.longitude}\n        text = {`📍${restaurant.name}`}\n        restaurant_id = {restaurant.id}\n        history = {this.props.history}\n        />\n    })\n\n\n    return (\n      <div className=\"home-map\" style={{ height: '70vh', width: '80vw' }}>\n          {  coo ?\n                <GoogleMapReact\n                bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_API_KEY }}\n                defaultCenter={this.props.coordinates}\n                defaultZoom={17.2}\n                >\n            {allCoordinates}\n            \n                </GoogleMapReact>\n          :null}\n      </div>\n    );\n  }\n}\n\nexport default HomeMap;","import React from 'react';\nimport RestaurantInHome from './ResturantInHome';\nimport FoodieNavbar from './FoodieNavbar';\nimport FoodieSidebar from './FoodieSidebar';\nimport HomeMap from './HomeMap';\n\n\n\n\nexport default class Home extends React.Component {\n    \n    componentDidMount() {\n        fetch(\"https://flatiron-foodie.herokuapp.com/getFavRestaurants/2\")\n            .then(resp=>resp.json())\n    }\n\n    render() {\n        let restaurants = this.props.AllRestaurant.map((restaurant) => {\n            return <RestaurantInHome history={ this.props.history }  restaurant={restaurant} />\n        })\n\n        return(\n            <React.Fragment>\n            <FoodieNavbar handleSearchRestaurant={ this.props.handleSearchRestaurant } history={ this.props.history }/>\n                <div className=\"home-container\">\n                    <HomeMap coordinates={this.props.coordinates} AllRestaurant={ this.props.AllRestaurant } history = { this.props.history }/>\n                    <div className=\"home-images\">\n                    {localStorage.token ? restaurants : \"LOGIN BUDDY\"}\n                    </div>\n                </div>\n            <FoodieSidebar history = { this.props.history } />\n            </React.Fragment>\n        )\n    }\n}","import React from 'react'\nimport {Button} from 'react-bootstrap'\n\nexport default class RestaurantComments extends React.Component{\n    \n    handleDeleteButton = (comment) => {\n        this.props.handleDeleteComment(comment)\n    }\n    \n    render(){\n        let allComments\n        if(this.props.comments.length > 0){\n            allComments = this.props.comments.map((comment)=>{\n                return <div><p> <span> {comment.user.name}: </span> {comment.context}\n                \n                {parseInt(comment.user.id) === parseInt(localStorage.user_id) ?\n                    <Button variant=\"danger\" onClick={()=> this.handleDeleteButton(comment) }>Delete Comment</Button> :\n                    null\n                }\n                </p>\n                </div>\n            })\n        }\n        return(\n            <div className=\"restaurant-comments\" >\n                <div style={{textDecoration:\"underline\"}}>Comments for this Restaurant:</div>\n                {allComments}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 17\n  };\n\n  render() {\n      let coo\n      if(this.props.coordinates){\n        coo = {\n            lat:this.props.coordinates.latitude,\n            lng:this.props.coordinates.longitude\n        }\n    }\n\n    return (\n      <div className=\"each-map\" style={{ height: '400px', width: '400px' }}>\n          {  coo?\n                <GoogleMapReact\n                bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_API_KEY }}\n                defaultCenter={coo}\n                defaultZoom={this.props.zoom}\n                >\n                <AnyReactComponent\n                    lat={coo.lat}\n                    lng={coo.lng}\n                    text=\"📍\"\n                />\n                <AnyReactComponent \n                    lat={coo.lat + 0.1}\n                    lng={coo.lng + 0.1}\n                    text=\"📍\"\n                />\n                </GoogleMapReact>\n          :null}\n      </div>\n    );\n  }\n}\n\nexport default SimpleMap;","import React from  'react'\n\nexport default class UsersThatLikedRestaurant extends React.Component{\n\n    render () {\n        let arr, display\n        if (this.props.usersLiked){\n        arr = this.props.usersLiked.map((user)=>{\n            {user.user_name.length <= 7?\n                display=user.user_name\n            :\n            display=user.user_name.slice(0,5)+\"...\"\n            }\n            return <span><button \n            className=\"restaurant-user-button\"\n            onClick={()=>{\n            localStorage.clickedUser=user.id \n            this.props.history.push(\"/profile\")\n            }}>{display}</button></span>\n        }\n        )}\n        return(\n            <div style={{textDecoration:\"underline\"}}>Users who liked this restaurant:{arr}</div>\n        )\n    }\n}","import React from 'react'\nimport FoodieNavbar from './FoodieNavbar'\nimport RestaurantComments from './RestaurantComments'\nimport Map from './Map'\nimport UsersThatLikedRestaurant from './UsersThatLikedRestaurant'\n\nexport default class RestaurantDetail extends React.Component{\n\n    state={\n        restaurant: [],\n        liked: false,\n        commentText: '',\n        comments: [],\n        usersLiked: []\n    }\n\n    handleDeleteComment = (comment) => {\n        fetch(`https://flatiron-foodie.herokuapp.com/deleteComment/${comment.id}`, {\n            method:\"DELETE\"\n        })\n            .then(()=>this.fetchCommentFromBackend())\n    }\n\n    componentDidMount(){\n        fetch(`https://flatiron-foodie.herokuapp.com/getRestaurantDetail/${localStorage.restaurant_id}`,{\n            method:\"POST\",\n            headers:{\n            \"Content-Type\":\"application/json\",\n            \"Accepts\":\"application/json\",\n            \"Authorization\":localStorage.token\n            },\n            body:JSON.stringify(\n            {user_id:localStorage.user_id}\n            )\n        })\n        .then(response=>response.json())\n        .then((data)=> {\n            this.setState({\n                liked: data.liked,\n                restaurant: {...data}\n            })\n            this.fetchCommentFromBackend()\n        })  \n\n        this.handleUsersLikeList()\n    }\n\n    fetchCommentFromBackend = () => {\n        fetch(\"https://flatiron-foodie.herokuapp.com/getComments\",{\n            method:\"POST\",\n            headers:{\n            \"Content-Type\":\"application/json\",\n            \"Accepts\":\"application/json\",\n            \"Authorization\":localStorage.token\n            },\n            body: JSON.stringify(\n            {user_id:localStorage.user_id,\n            restaurant_id:localStorage.restaurant_id\n            })\n        }).then(resp=>resp.json())\n            .then((data) => {\n                if(!data.error){\n            this.setState({ \n                comments:data\n            })}\n        })\n        .catch(console.log(\"error\"))\n    }\n\n\n    handleUsersLikeList = () => {\n\n        fetch(`https://flatiron-foodie.herokuapp.com/restaurants/${localStorage.restaurant_id}/users`,{\n            method:'GET',\n            headers:{\n                \"Accepts\":\"Application/json\",\n                'Content-Type':\"application/json\",\n                \"Authorization\":localStorage.token\n            }\n        })\n        .then(resp=>resp.json())\n        .then((data)=>{\n            if(!data.error){\n            this.setState({\n                usersLiked:data\n            })\n            }\n        })\n    }\n\n    handleLike = () => {\n        \n        fetch(`https://flatiron-foodie.herokuapp.com/addlike`,{\n            method:\"POST\",\n            headers:{\n            \"Content-Type\":\"application/json\",\n            \"Accepts\":\"application/json\",\n            \"Authorization\":localStorage.token\n            },\n            body:JSON.stringify(\n            {user_id:localStorage.user_id,\n            restaurant_id:localStorage.restaurant_id,\n            restaurant_name:this.state.restaurant.name}\n            )\n        }).then(() => {\n            this.handleUsersLikeList()\n            this.setState({\n                liked: !this.state.liked\n            })\n        })\n    }\n\n\n    handleCommentSubmit = () => {\n        fetch('https://flatiron-foodie.herokuapp.com/addComments',{\n            method:\"POST\",\n            headers:{\n            \"Content-Type\":\"application/json\",\n            \"Accepts\":\"application/json\",\n            \"Authorization\":localStorage.token\n            },\n            body:JSON.stringify(\n            {user_id:localStorage.user_id,\n            restaurant_id:localStorage.restaurant_id,\n            context:this.state.commentText,\n            restaurant_name:this.state.restaurant.name}\n            )\n        })\n            .then(resp => (resp.json()))\n            .then((data) => {\n                if (this.state.comments.length > 0){\n                    this.setState({\n                        comments:[...this.state.comments,data]\n                    })\n                }else{\n                    this.setState({\n                        comments:[data]\n                    }) \n                }\n            })\n            this.setState({\n                commentText: ''\n            })\n    }\n\n    handleCommentTypeChange = (e) => {\n        this.setState({\n            commentText: e.target.value\n        })\n    }\n\n    render(){\n        const {name, categories, rating, price, location, display_phone} = this.state.restaurant\n\n        let displayCategories;\n        let displayAddress;\n        if (this.state.restaurant.length !== 0){\n            displayCategories = categories.map(category => <span>~{category.title}~ </span>);\n            displayAddress = location.display_address.join(\", \");\n        }\n\n        return(\n            <React.Fragment>\n                <FoodieNavbar handleSearchRestaurant={this.props.handleSearchRestaurant} history={this.props.history}/>\n                <div className=\"restaurant-detail\">\n                    <img alt={ this.state.restaurant.name } className=\"restaurant-detail-image\" src={ this.state.restaurant.image_url } />\n                    <div className=\"map-and-content\">\n                        <div className=\"restaurant-detail-content\">\n                            <h4>{ name }</h4>\n                            <p>Address: { displayAddress }</p>\n                            <p>Phone: { display_phone } </p>\n                            <p>Rating: { rating}</p>\n                            <p>{ price }</p>\n                            <p>Categories: { displayCategories }</p>\n                        </div>\n                            <div><div class=\"like-content\">  \n                                <button onClick={this.handleLike} class=\"btn-secondary like-review\">\n                                    <i class=\"fa fa-heart\" aria-hidden=\"true\"></i> {this.state.liked? \"Unlike\" : \"like\"}\n                                </button>\n                            </div></div>\n                        <div className=\"restaurant-map\">\n                            <Map coordinates={this.state.restaurant.coordinates}/>\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n                    <UsersThatLikedRestaurant history={this.props.history} usersLiked={this.state.usersLiked}/>\n                    <RestaurantComments handleDeleteComment={this.handleDeleteComment} comments={this.state.comments}/>\n                    <label>Add a Review: </label>\n                    <br></br>\n                    <div><textarea value={this.state.commentText} onChange={this.handleCommentTypeChange}></textarea></div>\n                    <br></br>\n                    <div> <input className=\"comment-submit\" type=\"submit\" onClick={this.handleCommentSubmit} /></div>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n}","import React from \"react\";\nimport FoodieNavbar from './FoodieNavbar';\nimport {Form , FormControl, Button} from 'react-bootstrap'\n\nexport default class Friendlist extends React.Component{\n\n    state = {\n        friendList:[],\n        userSearchTerm:\"\",\n        allUsers:[]\n    }\n\n    handleSearchInput=(e)=>{\n        this.setState({\n            userSearchTerm:e.target.value\n        })\n    }\n\n    componentDidMount() {\n        fetch(`https://flatiron-foodie.herokuapp.com/following/${localStorage.user_id}`,\n        )\n        .then(resp => resp.json())\n        .then((data) => {\n                this.setState({\n                    friendList:data\n                })\n            })\n\n            fetch(`https://flatiron-foodie.herokuapp.com/users`,\n            )\n            .then(resp => resp.json())\n            .then((data) => {\n                    this.setState({\n                        allUsers:data\n                    })\n                })\n    }\n\n    render() {\n        let myFriends = this.state.friendList.map((friend) => {\n            return <li onClick={ () => {\n                localStorage.clickedUser = friend.id\n                this.props.history.push(\"/profile\")\n            }}>\n            {friend.name}</li>\n        })\n\n        let filteredUsers=this.state.allUsers.filter((user)=>{\n            if (this.state.userSearchTerm!==\"\"){\n                return user.name.toLowerCase().includes(this.state.userSearchTerm.toLowerCase()) || user.user_name.toLowerCase().includes(this.state.userSearchTerm.toLowerCase())\n            }\n            return false\n        })\n\n        let userJsx=filteredUsers.map((user)=>{\n               return <div className=\"searched-users\" onClick={()=>{\n                   localStorage.clickedUser=user.id \n                   this.props.history.push(\"/profile\")}} >{user.name}</div>\n            })\n        \n        return(\n            <div className=\"friend-list\">\n                <FoodieNavbar handleSearchRestaurant={this.props.handleSearchRestaurant} history={this.props.history} />\n                <div className=\"friend-list-content\">\n                    <h2 style={{textDecoration:\"underline\"}}>My Followed Users</h2>\n                    { myFriends }\n                </div>\n                <div className=\"friend-search\">\n\n                    <FormControl style={{width:\"320px\"}} className=\"user-search-form\" type=\"text\" onChange={this.handleSearchInput} value={this.state.userSearchTerm}  placeholder=\"Search Users..\" />\n                            {userJsx}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Button} from 'react-bootstrap'\n\n\nexport default class Register extends React.Component{\n    \n    state = {\n        name: '',\n        user_name: '',\n        password: ''\n    }\n\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(`https://flatiron-foodie.herokuapp.com/users`,{\n            method:\"POST\",\n            headers:{\n                'Content-Type':\"application/json\",\n                \"Accept\":\"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n        .then(response => response.json())\n        .then((data)=>{\n            if (!data.errors){\n                localStorage.setItem('token', data.token) \n                localStorage.user_id = data.user_id\n                this.props.history.push('/')\n            }\n        })\n    }\n\n    handleLoginClick = () => {\n        this.props.history.push(\"/\")\n    }\n\n    render(){\n        return(\n            <div className=\"register-page\">\n                <img src={require('../image/Foodie-logo.png')} alt=\"logo\" />\n                <div className=\"wrapper-register\">\n                    <h2>Create an Account</h2>\n                    <form onSubmit={ this.handleSubmit }>\n                        <input className=\"name-input\" onChange={ this.handleInputChange } value={ this.state.name } type=\"text\" placeholder=\"Name\" name=\"name\"/>\n                        <br></br><br></br>\n                        <input className=\"username-input\" onChange={ this.handleInputChange } value={ this.state.user_name } type=\"text\" placeholder=\"User Name\" name=\"user_name\"/>\n                        <br></br><br></br>\n                        <input className=\"password-input\" onChange={ this.handleInputChange } value={ this.state.password }  type=\"password\" placeholder=\"Password\" name=\"password\"/>\n                        <br></br><br></br>\n                        <Button type=\"submit\" value=\"submit\" variant=\"primary\">Submit</Button>\n                    </form>\n                    <br></br>\n                    <h3>Already Have an Account?</h3>\n                    <Button variant=\"warning\" onClick={ this.handleLoginClick }>Login</Button>\n\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport FoodieNavbar from './FoodieNavbar';\nimport {Button} from 'react-bootstrap'\n\nclass Profile extends React.Component {\n\n    state = {\n        user: [],\n        friends: false,\n        current_id: null\n    }\n\n    componentDidMount() {\n        this.fetchUserFromBackend()\n        this.fetchingFriendsList()\n    }\n\n    componentDidUpdate(){\n        if (parseInt(this.state.current_id )!== parseInt(localStorage.clickedUser)){\n            this.componentDidMount()\n        }\n    }\n\n    fetchingFriendsList() {\n        fetch(`https://flatiron-foodie.herokuapp.com/following/${localStorage.user_id}`,\n        )\n        .then(resp => resp.json())\n        .then((data) => {\n            if (data.length > 0){\n                if(data.filter((friend) => parseInt(friend.id)===parseInt(localStorage.clickedUser)).length > 0 ){\n                    this.setState({\n                        friends: true\n                    })\n                }\n            }\n            else{\n                this.setState({\n                    friends: false\n                })\n            }\n        })\n    }\n\n    fetchUserFromBackend = () => {\n        fetch(`https://flatiron-foodie.herokuapp.com/users/${localStorage.user_id}/${localStorage.clickedUser}`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accepts': 'application/json',\n                'Authorization': localStorage.token\n                }\n            }\n        )\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({   \n                user: data,\n                current_id: data.id\n            })}\n            )\n    }\n\n    handleClick = (id) => {\n        localStorage.restaurant_id = id\n        this.props.history.push(\"/show\")\n    }\n\n    handleAddFriend = () => {\n        this.setState({\n            friends: true\n        })\n\n        fetch(`https://flatiron-foodie.herokuapp.com/users/${localStorage.user_id}/addFriend/${localStorage.clickedUser}`)\n            .then(resp => resp.json)\n    }\n\n    handleDeleteFriend = () => {\n        \n        this.setState({\n            friends: false\n        })\n        \n        fetch(`https://flatiron-foodie.herokuapp.com/users/${localStorage.user_id}/deleteFriend/${localStorage.clickedUser}`, {\n            method: \"DELETE\"\n        })\n            .then(resp => resp.json)\n    }\n\n    render() {\n        \n        let userRestaurants;\n        if (this.state.user.restaurants) {\n            userRestaurants = this.state.user.restaurants.map((restaurant) => <li onClick={ () => this.handleClick(restaurant.real_id) }> {restaurant.name} </li>)\n        }\n\n        let boolean = ((localStorage.clickedUser !== localStorage.user_id) && (this.state.friends===false))\n        let addOrRemoveBoolean = (this.state.friends === true && (localStorage.clickedUser!==localStorage.user_id))\n\n        return(\n            <div className=\"profile-page\">\n                <FoodieNavbar handleSearchRestaurant={this.props.handleSearchRestaurant} history={this.props.history}/>\n                <div className=\"profile-page-content\">\n                    <img className=\"profile-image\" src={require('../image/foodie-profile-pic.jpg')} alt=\"profile-pic\" />\n                    <h1 className=\"profile-name\">{ this.state.user.name }</h1>\n                    <br></br>\n                    <ul><h2 style={{color:\"yellow\", border:\"solid white 2px\", background:\"red\"}}>Liked Restaurants:</h2> <div className=\"liked-restaurants-list\">{ userRestaurants }</div></ul>\n                    <br></br>\n                    {(boolean)?\n                        <Button variant=\"success\" onClick={this.handleAddFriend} >Follow</Button>\n                        :\n                        null\n                    }\n                    {addOrRemoveBoolean? <Button variant=\"danger\" onClick={this.handleDeleteFriend}>Unfollow</Button>:null}\n                    <br></br><br></br><br></br>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React from 'react';\nimport './App.css';\nimport Login from './components/Login'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './components/Home'\nimport RestaurantDetail from './components/RestaurantDetail'\nimport Friendlist from './components/Friendlist'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\n\nclass App extends React.Component {\n  \n  state = {\n    name: '',\n    user_name: '',\n    searchTerm: '',\n    AllRestaurant: [],\n    detailRestaurant: {},\n    xcoordinate: 40.700862,\n    ycoordinate: -73.987472\n  }\n\n  componentDidMount() {\n    this.getGeoLocation()\n    this.getRestaurantFromYelp()\n  }\n\n  handleSearchRestaurant = (term) => {\n    this.getRestaurantFromYelp(term)\n  }\n\n  getGeoLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          localStorage.xcoo=position.coords.latitude\n          localStorage.ycoo=position.coords.longitude\n          this.setState((prevState) => ({\n            xcoordinate:position.coords.latitude,\n            ycoordinate:position.coords.longitude\n          }),this.getRestaurantFromYelp\n          )\n        }\n      )\n    } else {\n      // alert(\"Cannot get your location from your browser. Using default coordinates.\")\n    }\n  }\n\n  getRestaurantFromYelp = (term=\"food\") => {\n    fetch(`https://flatiron-foodie.herokuapp.com/getRestaurant/${term}`, {\n      method:\"POST\",\n      headers:{\n        \"Content-Type\":\"application/json\",\n        \"Accepts\":\"application/json\"\n      },\n      body:JSON.stringify(\n      { xcoo:this.state.xcoordinate,\n        ycoo:this.state.ycoordinate}\n      )\n    })\n      .then(resp => resp.json())\n      .then((data) => {\n        if(!data.error){\n          this.setState({\n            AllRestaurant: data.businesses\n          })\n        }\n      }\n    )\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n      <Switch>\n        <Route exact path='/' render={(routerProps)=> <Login  {...routerProps}/>} />\n        <Route path='/home'\n          render={(routerProps) => <Home coordinates={{\n          lat:this.state.xcoordinate,\n          lng:this.state.ycoordinate\n          }}\n          {...routerProps}\n            handleSearchRestaurant={this.handleSearchRestaurant} \n            AllRestaurant={this.state.AllRestaurant}/>} \n          />\n          \n        <Route path='/register' render={(routerProps)=> <Register {...routerProps} />} />\n        <Route path='/friendlist' render={(routerProps)=> <Friendlist handleSearchRestaurant={this.handleSearchRestaurant} {...routerProps}/>} />\n        <Route path='/show' render={(routerProps)=><RestaurantDetail detailRestaurant={this.state.detailRestaurant} handleSearchRestaurant={this.handleSearchRestaurant} {...routerProps}/>} />\n        <Route path='/profile' render={(routerProps) => <Profile handleSearchRestaurant={this.handleSearchRestaurant} {...routerProps} />} />\n      </Switch>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}